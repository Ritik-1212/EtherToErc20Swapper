{"id":"76f859195b0ef8552cc29d31e26cde94","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"contracts/ERC20Swapper.sol":{"content":"//SPDX-License-Identiifer: MIT\n\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface ERC20Swapper {\n    function swapEtherToToken(address token, uint minAmount) external payable returns (uint);\n}\n\n//error\nerror EtherToErc20Swapper__EthNotSent();\nerror EtherToERC20Swappper__InnsufficientAmount();\n\ncontract EtherToERC20Swappper is ERC20Swapper {\n\n    function swapEtherToToken(\n        address token,\n        uint minAmount\n    ) external payable override returns (uint) {\n         // Ensure that the caller has sent Ether\n        if(msg.value < 0) {\n            revert EtherToErc20Swapper__EthNotSent();\n        }\n\n        // Retrieve the ERC-20 contract instance\n        IERC20 erc20 = IERC20(token);\n\n        // Calculate the expected amount of tokens to receive\n        uint expectedAmount = msg.value;\n\n        // Ensure that the ERC-20 contract has sufficient balance\n        if(expectedAmount < erc20.balanceOf(address(this))){\n\n            revert EtherToERC20Swappper__InnsufficientAmount();\n        }\n\n        // Transfer the tokens to the caller\n        erc20.transfer(msg.sender, expectedAmount);\n\n        // Return the actual amount of transferred tokens\n        return expectedAmount;\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ERC20Swapper.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/ERC20Swapper.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20Swapper.sol:19:9:\n   |\n19 |         uint minAmount\n   |         ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":464,"file":"contracts/ERC20Swapper.sol","start":450},"type":"Warning"}],"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"212:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":11,"name":"Transfer","nameLocation":"394:8:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:0","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:0","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:0","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":20,"name":"Approval","nameLocation":"625:8:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:0","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:0","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:0","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nameLocation":"939:7:0","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"1219:2:0","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1231:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"1565:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1580:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nameLocation":"2299:7:0","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nameLocation":"2316:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nameLocation":"2685:4:0","nodeType":"VariableDeclaration","scope":76,"src":"2677:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nameLocation":"2707:2:0","nodeType":"VariableDeclaration","scope":76,"src":"2699:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nameLocation":"2727:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2719:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":76,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:0"},"scope":77,"src":"2646:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2564:0","usedErrors":[]}],"src":"106:2661:0"},"id":0},"contracts/ERC20Swapper.sol":{"ast":{"absolutePath":"contracts/ERC20Swapper.sol","exportedSymbols":{"ERC20Swapper":[90],"EtherToERC20Swappper":[153],"EtherToERC20Swappper__InnsufficientAmount":[94],"EtherToErc20Swapper__EthNotSent":[92],"IERC20":[77]},"id":154,"nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":80,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":154,"sourceUnit":78,"src":"58:56:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC20Swapper","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":90,"linearizedBaseContracts":[90],"name":"ERC20Swapper","nameLocation":"126:12:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7a2a0456","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"swapEtherToToken","nameLocation":"154:16:1","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"token","nameLocation":"179:5:1","nodeType":"VariableDeclaration","scope":89,"src":"171:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"171:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"minAmount","nameLocation":"191:9:1","nodeType":"VariableDeclaration","scope":89,"src":"186:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint","nodeType":"ElementaryTypeName","src":"186:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"170:31:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"228:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint","nodeType":"ElementaryTypeName","src":"228:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"227:6:1"},"scope":90,"src":"145:89:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":154,"src":"116:120:1","usedErrors":[]},{"errorSelector":"91f547d7","id":92,"name":"EtherToErc20Swapper__EthNotSent","nameLocation":"252:31:1","nodeType":"ErrorDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"283:2:1"},"src":"246:40:1"},{"errorSelector":"75d38222","id":94,"name":"EtherToERC20Swappper__InnsufficientAmount","nameLocation":"293:41:1","nodeType":"ErrorDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[],"src":"334:2:1"},"src":"287:50:1"},{"abstract":false,"baseContracts":[{"baseName":{"id":95,"name":"ERC20Swapper","nameLocations":["372:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":90,"src":"372:12:1"},"id":96,"nodeType":"InheritanceSpecifier","src":"372:12:1"}],"canonicalName":"EtherToERC20Swappper","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":153,"linearizedBaseContracts":[153,90],"name":"EtherToERC20Swappper","nameLocation":"348:20:1","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[89],"body":{"id":151,"nodeType":"Block","src":"512:732:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"575:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"579:5:1","memberName":"value","nodeType":"MemberAccess","src":"575:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"587:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"575:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":114,"nodeType":"IfStatement","src":"572:83:1","trueBody":{"id":113,"nodeType":"Block","src":"590:65:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":110,"name":"EtherToErc20Swapper__EthNotSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"611:31:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"611:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"RevertStatement","src":"604:40:1"}]}},{"assignments":[117],"declarations":[{"constant":false,"id":117,"mutability":"mutable","name":"erc20","nameLocation":"721:5:1","nodeType":"VariableDeclaration","scope":151,"src":"714:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":116,"nodeType":"UserDefinedTypeName","pathNode":{"id":115,"name":"IERC20","nameLocations":["714:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"714:6:1"},"referencedDeclaration":77,"src":"714:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"}],"id":121,"initialValue":{"arguments":[{"id":119,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"736:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":118,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"729:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"729:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"714:28:1"},{"assignments":[123],"declarations":[{"constant":false,"id":123,"mutability":"mutable","name":"expectedAmount","nameLocation":"820:14:1","nodeType":"VariableDeclaration","scope":151,"src":"815:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint","nodeType":"ElementaryTypeName","src":"815:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":126,"initialValue":{"expression":{"id":124,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"837:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"841:5:1","memberName":"value","nodeType":"MemberAccess","src":"837:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"815:31:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":127,"name":"expectedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"926:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"arguments":[{"id":132,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"967:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_EtherToERC20Swappper_$153","typeString":"contract EtherToERC20Swappper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EtherToERC20Swappper_$153","typeString":"contract EtherToERC20Swappper"}],"id":131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"959:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:1","typeDescriptions":{}}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":128,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"943:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"949:9:1","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":34,"src":"943:15:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"943:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"926:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":140,"nodeType":"IfStatement","src":"923:127:1","trueBody":{"id":139,"nodeType":"Block","src":"974:76:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":136,"name":"EtherToERC20Swappper__InnsufficientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"996:41:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"996:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":138,"nodeType":"RevertStatement","src":"989:50:1"}]}},{"expression":{"arguments":[{"expression":{"id":144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1120:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1124:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1120:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":146,"name":"expectedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1132:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":141,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1105:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1111:8:1","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1105:14:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"ExpressionStatement","src":"1105:42:1"},{"expression":{"id":149,"name":"expectedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1223:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":105,"id":150,"nodeType":"Return","src":"1216:21:1"}]},"functionSelector":"7a2a0456","id":152,"implemented":true,"kind":"function","modifiers":[],"name":"swapEtherToToken","nameLocation":"401:16:1","nodeType":"FunctionDefinition","overrides":{"id":102,"nodeType":"OverrideSpecifier","overrides":[],"src":"488:8:1"},"parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"token","nameLocation":"435:5:1","nodeType":"VariableDeclaration","scope":152,"src":"427:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"minAmount","nameLocation":"455:9:1","nodeType":"VariableDeclaration","scope":152,"src":"450:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint","nodeType":"ElementaryTypeName","src":"450:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"417:53:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"506:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint","nodeType":"ElementaryTypeName","src":"506:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"505:6:1"},"scope":153,"src":"392:852:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":154,"src":"339:907:1","usedErrors":[92,94]}],"src":"32:1214:1"},"id":1}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ERC20Swapper.sol":{"ERC20Swapper":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"swapEtherToToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"swapEtherToToken(address,uint256)":"7a2a0456"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"swapEtherToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Swapper.sol\":\"ERC20Swapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/ERC20Swapper.sol\":{\"content\":\"//SPDX-License-Identiifer: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ERC20Swapper {\\n    function swapEtherToToken(address token, uint minAmount) external payable returns (uint);\\n}\\n\\n//error\\nerror EtherToErc20Swapper__EthNotSent();\\nerror EtherToERC20Swappper__InnsufficientAmount();\\n\\ncontract EtherToERC20Swappper is ERC20Swapper {\\n\\n    function swapEtherToToken(\\n        address token,\\n        uint minAmount\\n    ) external payable override returns (uint) {\\n         // Ensure that the caller has sent Ether\\n        if(msg.value < 0) {\\n            revert EtherToErc20Swapper__EthNotSent();\\n        }\\n\\n        // Retrieve the ERC-20 contract instance\\n        IERC20 erc20 = IERC20(token);\\n\\n        // Calculate the expected amount of tokens to receive\\n        uint expectedAmount = msg.value;\\n\\n        // Ensure that the ERC-20 contract has sufficient balance\\n        if(expectedAmount < erc20.balanceOf(address(this))){\\n\\n            revert EtherToERC20Swappper__InnsufficientAmount();\\n        }\\n\\n        // Transfer the tokens to the caller\\n        erc20.transfer(msg.sender, expectedAmount);\\n\\n        // Return the actual amount of transferred tokens\\n        return expectedAmount;\\n    }\\n}\",\"keccak256\":\"0x201f866c99c2218004a9aeaa55592889833cba4a5a82814e6cc2374b04eb6b9d\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"EtherToERC20Swappper":{"abi":[{"inputs":[],"name":"EtherToERC20Swappper__InnsufficientAmount","type":"error"},{"inputs":[],"name":"EtherToErc20Swapper__EthNotSent","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"swapEtherToToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610409806100206000396000f3fe60806040526004361061001e5760003560e01c80637a2a045614610023575b600080fd5b61003d6004803603810190610038919061026f565b610053565b60405161004a91906102be565b60405180910390f35b60008034101561008f576040517f91f547d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060003490508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100d291906102e8565b602060405180830381865afa1580156100ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101139190610318565b81101561014c576040517f75d3822200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610187929190610345565b6020604051808303816000875af11580156101a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ca91906103a6565b50809250505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610206826101db565b9050919050565b610216816101fb565b811461022157600080fd5b50565b6000813590506102338161020d565b92915050565b6000819050919050565b61024c81610239565b811461025757600080fd5b50565b60008135905061026981610243565b92915050565b60008060408385031215610286576102856101d6565b5b600061029485828601610224565b92505060206102a58582860161025a565b9150509250929050565b6102b881610239565b82525050565b60006020820190506102d360008301846102af565b92915050565b6102e2816101fb565b82525050565b60006020820190506102fd60008301846102d9565b92915050565b60008151905061031281610243565b92915050565b60006020828403121561032e5761032d6101d6565b5b600061033c84828501610303565b91505092915050565b600060408201905061035a60008301856102d9565b61036760208301846102af565b9392505050565b60008115159050919050565b6103838161036e565b811461038e57600080fd5b50565b6000815190506103a08161037a565b92915050565b6000602082840312156103bc576103bb6101d6565b5b60006103ca84828501610391565b9150509291505056fea26469706673582212209b74562b1392b8afa9f8d9fe264ab852ce41e033f655dff08a965e0157d5ebd464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A2A0456 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0x53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLVALUE LT ISZERO PUSH2 0x8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F547D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 CALLVALUE SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x318 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH32 0x75D3822200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP3 SWAP2 SWAP1 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206 DUP3 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x1FB JUMP JUMPDEST DUP2 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233 DUP2 PUSH2 0x20D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C DUP2 PUSH2 0x239 JUMP JUMPDEST DUP2 EQ PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP6 DUP3 DUP7 ADD PUSH2 0x224 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A5 DUP6 DUP3 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B8 DUP2 PUSH2 0x239 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x1FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x312 DUP2 PUSH2 0x243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E JUMPI PUSH2 0x32D PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP5 DUP3 DUP6 ADD PUSH2 0x303 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x367 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0x36E JUMP JUMPDEST DUP2 EQ PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC JUMPI PUSH2 0x3BB PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CA DUP5 DUP3 DUP6 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH21 0x562B1392B8AFA9F8D9FE264AB852CE41E033F655DF CREATE DUP11 SWAP7 0x5E ADD JUMPI 0xD5 0xEB 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"339:907:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@swapEtherToToken_152":{"entryPoint":83,"id":152,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":623,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":934,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":729,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":687,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":837,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":507,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":878,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":569,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":470,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":525,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":890,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":579,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3934:2","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:2","statements":[{"nodeType":"YulAssignment","src":"57:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:2"},"nodeType":"YulFunctionCall","src":"67:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:2","type":""}],"src":"7:75:2"},{"body":{"nodeType":"YulBlock","src":"177:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:2"},"nodeType":"YulFunctionCall","src":"187:12:2"},"nodeType":"YulExpressionStatement","src":"187:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:2"},{"body":{"nodeType":"YulBlock","src":"300:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:2"},{"body":{"nodeType":"YulBlock","src":"379:81:2","statements":[{"nodeType":"YulAssignment","src":"389:65:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:2"},"nodeType":"YulFunctionCall","src":"400:54:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:2"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:2","type":""}],"src":"334:126:2"},{"body":{"nodeType":"YulBlock","src":"511:51:2","statements":[{"nodeType":"YulAssignment","src":"521:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:2"},"nodeType":"YulFunctionCall","src":"532:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:2"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:2","type":""}],"src":"466:96:2"},{"body":{"nodeType":"YulBlock","src":"611:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:2"},"nodeType":"YulFunctionCall","src":"670:12:2"},"nodeType":"YulExpressionStatement","src":"670:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:2"},"nodeType":"YulFunctionCall","src":"641:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:2"},"nodeType":"YulFunctionCall","src":"631:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:2"},"nodeType":"YulFunctionCall","src":"624:43:2"},"nodeType":"YulIf","src":"621:63:2"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:2","type":""}],"src":"568:122:2"},{"body":{"nodeType":"YulBlock","src":"748:87:2","statements":[{"nodeType":"YulAssignment","src":"758:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:2"},"nodeType":"YulFunctionCall","src":"767:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:2"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:2"},"nodeType":"YulFunctionCall","src":"796:33:2"},"nodeType":"YulExpressionStatement","src":"796:33:2"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:2","type":""}],"src":"696:139:2"},{"body":{"nodeType":"YulBlock","src":"886:32:2","statements":[{"nodeType":"YulAssignment","src":"896:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:2"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:2","type":""}],"src":"841:77:2"},{"body":{"nodeType":"YulBlock","src":"967:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:2"},"nodeType":"YulFunctionCall","src":"1026:12:2"},"nodeType":"YulExpressionStatement","src":"1026:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:2"},"nodeType":"YulFunctionCall","src":"997:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:2"},"nodeType":"YulFunctionCall","src":"987:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:2"},"nodeType":"YulFunctionCall","src":"980:43:2"},"nodeType":"YulIf","src":"977:63:2"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:2","type":""}],"src":"924:122:2"},{"body":{"nodeType":"YulBlock","src":"1104:87:2","statements":[{"nodeType":"YulAssignment","src":"1114:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:2"},"nodeType":"YulFunctionCall","src":"1123:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:2"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:2"},"nodeType":"YulFunctionCall","src":"1152:33:2"},"nodeType":"YulExpressionStatement","src":"1152:33:2"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:2","type":""}],"src":"1052:139:2"},{"body":{"nodeType":"YulBlock","src":"1280:391:2","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:2"},"nodeType":"YulFunctionCall","src":"1328:79:2"},"nodeType":"YulExpressionStatement","src":"1328:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:2"},"nodeType":"YulFunctionCall","src":"1297:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:2"},"nodeType":"YulFunctionCall","src":"1293:32:2"},"nodeType":"YulIf","src":"1290:119:2"},{"nodeType":"YulBlock","src":"1419:117:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:2"},"nodeType":"YulFunctionCall","src":"1494:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:2"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:2"},"nodeType":"YulFunctionCall","src":"1473:53:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:2"}]}]},{"nodeType":"YulBlock","src":"1546:118:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:2","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:2"},"nodeType":"YulFunctionCall","src":"1622:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:2"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:2"},"nodeType":"YulFunctionCall","src":"1601:53:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:2"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:2","type":""}],"src":"1197:474:2"},{"body":{"nodeType":"YulBlock","src":"1742:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:2"},"nodeType":"YulFunctionCall","src":"1764:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:2"},"nodeType":"YulFunctionCall","src":"1752:37:2"},"nodeType":"YulExpressionStatement","src":"1752:37:2"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:2","type":""}],"src":"1677:118:2"},{"body":{"nodeType":"YulBlock","src":"1899:124:2","statements":[{"nodeType":"YulAssignment","src":"1909:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:2"},"nodeType":"YulFunctionCall","src":"1917:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:2"},"nodeType":"YulFunctionCall","src":"1998:17:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:2"},"nodeType":"YulFunctionCall","src":"1945:71:2"},"nodeType":"YulExpressionStatement","src":"1945:71:2"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:2","type":""}],"src":"1801:222:2"},{"body":{"nodeType":"YulBlock","src":"2094:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2111:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2134:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2116:17:2"},"nodeType":"YulFunctionCall","src":"2116:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2104:6:2"},"nodeType":"YulFunctionCall","src":"2104:37:2"},"nodeType":"YulExpressionStatement","src":"2104:37:2"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2082:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2089:3:2","type":""}],"src":"2029:118:2"},{"body":{"nodeType":"YulBlock","src":"2251:124:2","statements":[{"nodeType":"YulAssignment","src":"2261:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2273:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2284:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:2"},"nodeType":"YulFunctionCall","src":"2269:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2261:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2341:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2354:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2365:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2350:3:2"},"nodeType":"YulFunctionCall","src":"2350:17:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2297:43:2"},"nodeType":"YulFunctionCall","src":"2297:71:2"},"nodeType":"YulExpressionStatement","src":"2297:71:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2223:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2235:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2246:4:2","type":""}],"src":"2153:222:2"},{"body":{"nodeType":"YulBlock","src":"2444:80:2","statements":[{"nodeType":"YulAssignment","src":"2454:22:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2469:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2463:5:2"},"nodeType":"YulFunctionCall","src":"2463:13:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2454:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2512:5:2"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2485:26:2"},"nodeType":"YulFunctionCall","src":"2485:33:2"},"nodeType":"YulExpressionStatement","src":"2485:33:2"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2422:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"2430:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2438:5:2","type":""}],"src":"2381:143:2"},{"body":{"nodeType":"YulBlock","src":"2607:274:2","statements":[{"body":{"nodeType":"YulBlock","src":"2653:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2655:77:2"},"nodeType":"YulFunctionCall","src":"2655:79:2"},"nodeType":"YulExpressionStatement","src":"2655:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2628:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"2637:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2624:3:2"},"nodeType":"YulFunctionCall","src":"2624:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"2649:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2620:3:2"},"nodeType":"YulFunctionCall","src":"2620:32:2"},"nodeType":"YulIf","src":"2617:119:2"},{"nodeType":"YulBlock","src":"2746:128:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2761:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"2775:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2765:6:2","type":""}]},{"nodeType":"YulAssignment","src":"2790:74:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2836:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2832:3:2"},"nodeType":"YulFunctionCall","src":"2832:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2856:7:2"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2800:31:2"},"nodeType":"YulFunctionCall","src":"2800:64:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2790:6:2"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2577:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2588:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2600:6:2","type":""}],"src":"2530:351:2"},{"body":{"nodeType":"YulBlock","src":"3013:206:2","statements":[{"nodeType":"YulAssignment","src":"3023:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3035:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3046:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3031:3:2"},"nodeType":"YulFunctionCall","src":"3031:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3023:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3103:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3116:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3127:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3112:3:2"},"nodeType":"YulFunctionCall","src":"3112:17:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3059:43:2"},"nodeType":"YulFunctionCall","src":"3059:71:2"},"nodeType":"YulExpressionStatement","src":"3059:71:2"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3184:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3197:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3208:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:2"},"nodeType":"YulFunctionCall","src":"3193:18:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3140:43:2"},"nodeType":"YulFunctionCall","src":"3140:72:2"},"nodeType":"YulExpressionStatement","src":"3140:72:2"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2977:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2989:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2997:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3008:4:2","type":""}],"src":"2887:332:2"},{"body":{"nodeType":"YulBlock","src":"3267:48:2","statements":[{"nodeType":"YulAssignment","src":"3277:32:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3302:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3295:6:2"},"nodeType":"YulFunctionCall","src":"3295:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3288:6:2"},"nodeType":"YulFunctionCall","src":"3288:21:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3277:7:2"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3259:7:2","type":""}],"src":"3225:90:2"},{"body":{"nodeType":"YulBlock","src":"3361:76:2","statements":[{"body":{"nodeType":"YulBlock","src":"3415:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3424:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3427:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3417:6:2"},"nodeType":"YulFunctionCall","src":"3417:12:2"},"nodeType":"YulExpressionStatement","src":"3417:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3384:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3406:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3391:14:2"},"nodeType":"YulFunctionCall","src":"3391:21:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3381:2:2"},"nodeType":"YulFunctionCall","src":"3381:32:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3374:6:2"},"nodeType":"YulFunctionCall","src":"3374:40:2"},"nodeType":"YulIf","src":"3371:60:2"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3354:5:2","type":""}],"src":"3321:116:2"},{"body":{"nodeType":"YulBlock","src":"3503:77:2","statements":[{"nodeType":"YulAssignment","src":"3513:22:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3528:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3522:5:2"},"nodeType":"YulFunctionCall","src":"3522:13:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3513:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3568:5:2"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"3544:23:2"},"nodeType":"YulFunctionCall","src":"3544:30:2"},"nodeType":"YulExpressionStatement","src":"3544:30:2"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3481:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"3489:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3497:5:2","type":""}],"src":"3443:137:2"},{"body":{"nodeType":"YulBlock","src":"3660:271:2","statements":[{"body":{"nodeType":"YulBlock","src":"3706:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3708:77:2"},"nodeType":"YulFunctionCall","src":"3708:79:2"},"nodeType":"YulExpressionStatement","src":"3708:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3681:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3677:3:2"},"nodeType":"YulFunctionCall","src":"3677:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"3702:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3673:3:2"},"nodeType":"YulFunctionCall","src":"3673:32:2"},"nodeType":"YulIf","src":"3670:119:2"},{"nodeType":"YulBlock","src":"3799:125:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3814:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3828:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3818:6:2","type":""}]},{"nodeType":"YulAssignment","src":"3843:71:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3886:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"3897:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3882:3:2"},"nodeType":"YulFunctionCall","src":"3882:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3906:7:2"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"3853:28:2"},"nodeType":"YulFunctionCall","src":"3853:61:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3843:6:2"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3630:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3641:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3653:6:2","type":""}],"src":"3586:345:2"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061001e5760003560e01c80637a2a045614610023575b600080fd5b61003d6004803603810190610038919061026f565b610053565b60405161004a91906102be565b60405180910390f35b60008034101561008f576040517f91f547d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060003490508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100d291906102e8565b602060405180830381865afa1580156100ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101139190610318565b81101561014c576040517f75d3822200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610187929190610345565b6020604051808303816000875af11580156101a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ca91906103a6565b50809250505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610206826101db565b9050919050565b610216816101fb565b811461022157600080fd5b50565b6000813590506102338161020d565b92915050565b6000819050919050565b61024c81610239565b811461025757600080fd5b50565b60008135905061026981610243565b92915050565b60008060408385031215610286576102856101d6565b5b600061029485828601610224565b92505060206102a58582860161025a565b9150509250929050565b6102b881610239565b82525050565b60006020820190506102d360008301846102af565b92915050565b6102e2816101fb565b82525050565b60006020820190506102fd60008301846102d9565b92915050565b60008151905061031281610243565b92915050565b60006020828403121561032e5761032d6101d6565b5b600061033c84828501610303565b91505092915050565b600060408201905061035a60008301856102d9565b61036760208301846102af565b9392505050565b60008115159050919050565b6103838161036e565b811461038e57600080fd5b50565b6000815190506103a08161037a565b92915050565b6000602082840312156103bc576103bb6101d6565b5b60006103ca84828501610391565b9150509291505056fea26469706673582212209b74562b1392b8afa9f8d9fe264ab852ce41e033f655dff08a965e0157d5ebd464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A2A0456 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0x53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLVALUE LT ISZERO PUSH2 0x8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F547D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 CALLVALUE SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x318 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH32 0x75D3822200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP3 SWAP2 SWAP1 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206 DUP3 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x1FB JUMP JUMPDEST DUP2 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233 DUP2 PUSH2 0x20D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C DUP2 PUSH2 0x239 JUMP JUMPDEST DUP2 EQ PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP6 DUP3 DUP7 ADD PUSH2 0x224 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A5 DUP6 DUP3 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B8 DUP2 PUSH2 0x239 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x1FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x312 DUP2 PUSH2 0x243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E JUMPI PUSH2 0x32D PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP5 DUP3 DUP6 ADD PUSH2 0x303 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x367 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0x36E JUMP JUMPDEST DUP2 EQ PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC JUMPI PUSH2 0x3BB PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CA DUP5 DUP3 DUP6 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH21 0x562B1392B8AFA9F8D9FE264AB852CE41E033F655DF CREATE DUP11 SWAP7 0x5E ADD JUMPI 0xD5 0xEB 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"339:907:1:-:0;;;;;;;;;;;;;;;;;;;;;392:852;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;506:4;587:1;575:9;:13;572:83;;;611:33;;;;;;;;;;;;;;572:83;714:12;736:5;714:28;;815:19;837:9;815:31;;943:5;:15;;;967:4;943:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;926:14;:47;923:127;;;996:43;;;;;;;;;;;;;;923:127;1105:5;:14;;;1120:10;1132:14;1105:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1223:14;1216:21;;;;392:852;;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:118::-;2116:24;2134:5;2116:24;:::i;:::-;2111:3;2104:37;2029:118;;:::o;2153:222::-;2246:4;2284:2;2273:9;2269:18;2261:26;;2297:71;2365:1;2354:9;2350:17;2341:6;2297:71;:::i;:::-;2153:222;;;;:::o;2381:143::-;2438:5;2469:6;2463:13;2454:22;;2485:33;2512:5;2485:33;:::i;:::-;2381:143;;;;:::o;2530:351::-;2600:6;2649:2;2637:9;2628:7;2624:23;2620:32;2617:119;;;2655:79;;:::i;:::-;2617:119;2775:1;2800:64;2856:7;2847:6;2836:9;2832:22;2800:64;:::i;:::-;2790:74;;2746:128;2530:351;;;;:::o;2887:332::-;3008:4;3046:2;3035:9;3031:18;3023:26;;3059:71;3127:1;3116:9;3112:17;3103:6;3059:71;:::i;:::-;3140:72;3208:2;3197:9;3193:18;3184:6;3140:72;:::i;:::-;2887:332;;;;;:::o;3225:90::-;3259:7;3302:5;3295:13;3288:21;3277:32;;3225:90;;;:::o;3321:116::-;3391:21;3406:5;3391:21;:::i;:::-;3384:5;3381:32;3371:60;;3427:1;3424;3417:12;3371:60;3321:116;:::o;3443:137::-;3497:5;3528:6;3522:13;3513:22;;3544:30;3568:5;3544:30;:::i;:::-;3443:137;;;;:::o;3586:345::-;3653:6;3702:2;3690:9;3681:7;3677:23;3673:32;3670:119;;;3708:79;;:::i;:::-;3670:119;3828:1;3853:61;3906:7;3897:6;3886:9;3882:22;3853:61;:::i;:::-;3843:71;;3799:125;3586:345;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"206600","executionCost":"251","totalCost":"206851"},"external":{"swapEtherToToken(address,uint256)":"infinite"}},"methodIdentifiers":{"swapEtherToToken(address,uint256)":"7a2a0456"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EtherToERC20Swappper__InnsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EtherToErc20Swapper__EthNotSent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"swapEtherToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Swapper.sol\":\"EtherToERC20Swappper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/ERC20Swapper.sol\":{\"content\":\"//SPDX-License-Identiifer: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ERC20Swapper {\\n    function swapEtherToToken(address token, uint minAmount) external payable returns (uint);\\n}\\n\\n//error\\nerror EtherToErc20Swapper__EthNotSent();\\nerror EtherToERC20Swappper__InnsufficientAmount();\\n\\ncontract EtherToERC20Swappper is ERC20Swapper {\\n\\n    function swapEtherToToken(\\n        address token,\\n        uint minAmount\\n    ) external payable override returns (uint) {\\n         // Ensure that the caller has sent Ether\\n        if(msg.value < 0) {\\n            revert EtherToErc20Swapper__EthNotSent();\\n        }\\n\\n        // Retrieve the ERC-20 contract instance\\n        IERC20 erc20 = IERC20(token);\\n\\n        // Calculate the expected amount of tokens to receive\\n        uint expectedAmount = msg.value;\\n\\n        // Ensure that the ERC-20 contract has sufficient balance\\n        if(expectedAmount < erc20.balanceOf(address(this))){\\n\\n            revert EtherToERC20Swappper__InnsufficientAmount();\\n        }\\n\\n        // Transfer the tokens to the caller\\n        erc20.transfer(msg.sender, expectedAmount);\\n\\n        // Return the actual amount of transferred tokens\\n        return expectedAmount;\\n    }\\n}\",\"keccak256\":\"0x201f866c99c2218004a9aeaa55592889833cba4a5a82814e6cc2374b04eb6b9d\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}